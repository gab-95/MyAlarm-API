// Generated with g9.

package it.myalert.entity;

import java.io.Serializable;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Version;

import com.sun.istack.NotNull;

@Entity(name="citizen")
public class Citizen implements Serializable {

    /**
     * The optimistic lock. Available via standard bean get/set operations.
     */
    @Version
    @Column(name="LOCK_FLAG")
    private Integer lockFlag;

    /**
     * Access method for the lockFlag property.
     *
     * @return the current value of the lockFlag property
     */
    public Integer getLockFlag() {
        return lockFlag;
    }

    /**
     * Sets the value of the lockFlag property.
     *
     * @param aLockFlag the new value of the lockFlag property
     */
    public void setLockFlag(Integer aLockFlag) {
        lockFlag = aLockFlag;
    }

    @Column(name="Lat", length=15)
    private String lat;
    @Column(name="Long", length=15)
    private String long_;
    @OneToMany(mappedBy="citizen")
    private Set<Alarm> alarm;
    @NotNull
    @OneToOne(optional=false, mappedBy="citizen")
    @PrimaryKeyJoinColumn(name="idCitizen")
    private User user;

    /** Default constructor. */
    public Citizen() {
        super();
    }

    /**
     * Access method for lat.
     *
     * @return the current value of lat
     */
    public String getLat() {
        return lat;
    }

    /**
     * Setter method for lat.
     *
     * @param aLat the new value for lat
     */
    public void setLat(String aLat) {
        lat = aLat;
    }

    /**
     * Access method for long_.
     *
     * @return the current value of long_
     */
    public String getLong_() {
        return long_;
    }

    /**
     * Setter method for long_.
     *
     * @param aLong_ the new value for long_
     */
    public void setLong_(String aLong_) {
        long_ = aLong_;
    }

    /**
     * Access method for alarm.
     *
     * @return the current value of alarm
     */
    public Set<Alarm> getAlarm() {
        return alarm;
    }

    /**
     * Setter method for alarm.
     *
     * @param aAlarm the new value for alarm
     */
    public void setAlarm(Set<Alarm> aAlarm) {
        alarm = aAlarm;
    }

    /**
     * Access method for user.
     *
     * @return the current value of user
     */
    public User getUser() {
        return user;
    }

    /**
     * Setter method for user.
     *
     * @param aUser the new value for user
     */
    public void setUser(User aUser) {
        user = aUser;
    }

}
